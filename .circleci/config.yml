version: 2.1
jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      # Install latest versions of browsers and their corresponding drivers
      - run:
          name: Install Browsers and WebDriverManager
          command: |
            sudo apt-get update && sudo apt-get install -y wget firefox
            # Install Google Chrome
            wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt-get install -y ./google-chrome-stable_current_amd64.deb
            # Install ChromeDriver (ensure version compatibility with Chrome)
            wget -q https://chromedriver.storage.googleapis.com/2.46/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/
            # Install GeckoDriver for Firefox
            wget -q https://github.com/mozilla/geckodriver/releases/download/v0.30.0/geckodriver-v0.30.0-linux64.tar.gz
            tar -xzf geckodriver-v0.30.0-linux64.tar.gz
            sudo mv geckodriver /usr/local/bin/
  

#---------------------------------------------------------------------------------
      # Cache Maven dependencies to speed up builds
      #      - restore_cache:
      #          keys:
      #            - v1-dependencies-{{ checksum "pom.xml" }}

      # Install project dependencies with Maven
      - run:
          name: Install dependencies
          command: mvn clean install -DskipTests

      # Save the new cache
      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2/repository

      # Run the Cucumber tests using Maven
      - run:
          name: Run Cucumber tests
          command: mvn test

      # Store test results for later use
      - run:
          name: Create test results directory
#          command: mkdir -p /home/circleci/project/target/surefire-reports/store_test_results

      - store_test_results:
          path: /home/circleci/git-collab-askomdch-tetiana/target/surefire-reports
      #          /home/circleci/pom7-circle-bdd/target/surefire-reports/store_test_results
      - store_artifacts:
          path: target/surefire-reports
          destination: test-report


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
#        ------------------------------------------------------------
## Use the latest 2.1 version of CircleCI pipeline process engine.
## See: https://circleci.com/docs/configuration-reference
#version: 2.1
#
## Define a job to be invoked later in a workflow.
## See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
#jobs:
#  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
#  build-and-test:
#    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
#    docker:
#      # Specify the version you desire here
#      # See: https://circleci.com/developer/images/image/cimg/openjdk
#      - image: cimg/openjdk:11.0
#
#    # Add steps to the job
#    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
#    steps:
#      # Checkout the code as the first step.
#      - checkout
#
#      # Use mvn clean and package as the standard maven build phase
#      - run:
#          name: Build
#          command: mvn -B -DskipTests clean package
#      # Then run your tests!
#      - run:
#          name: Test
#          command: mvn test
#
## Orchestrate jobs using workflows
## See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
#workflows:
#  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
#    # Inside the workflow, you define the jobs you want to run.
#    jobs:
#      - build-and-test